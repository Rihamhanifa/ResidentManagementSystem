<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>26</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAIBAQGVDQ8R/xIWGf8SFhn/EhYZ/xIWGf8SFhn/EhYZ/xIWGf8SFhn/EhYZ/xIW
        Gf8SFhn/EhYZ/xIWGf8SFhn/EhYZ/xIWGf8SFhn/EhYZ/xIWGf8SFhn/EhYZ/xIVGP8LDQ//AAEBlQAA
        AAIAAAAAAAAAAAAAAAAAAAAAAAAACQQFBb9ngZP/l77Z/5W71f+Vu9X/lbvV/5W71f+Vu9X/lbvV/5W7
        1f+Vu9X/lbvV/5W71f+Vu9X/lbvV/5W71f+Vu9X/lbvV/5W71f+Vu9X/lbvV/5W71f+Vu9X/kLbO/1px
        gP8DBAW/AAAACQAAAAAAAAAAAAAAAAAAAAAAAAAJBAYGwHycsP+35v//tOL//7Ti//+04v//tOL//7Xj
        //+w3vv/rdr4/63a+P+t2vj/rdr4/63a+P+t2vj/rdr4/63a+P+w3vv/teP//7Ti//+04v//tOL//7Ti
        //+v2/j/bYmb/wQFBsAAAAAJAAAAAAAAAAAAAAAAAAAAAAAAAAkEBQa/e5qw/7Xk//+y4P//suD//7Lg
        //+z4v//mcDb/zxMV/8tN0P/LThB/y04Qv8uOET/LjhE/y04Qv8tOEH/LTdC/z1MV/+ZwNv/s+L//7Lg
        //+y4P//suD//63Z9/9sh5r/BAUFvwAAAAkAAAAAAAAAAAAAAAAAAAAAAAAACQQFBr97mrD/teT//7Lg
        //+y4P//suD//7Xk//90k6X/FQcy/0ERm/8XBjj/Jgpb/0QSov9EEqL/Jgpb/xcGNv87DHz/EwUk/3ST
        pf+15P//suD//7Lg//+y4P//rdn3/2yHmv8EBQW/AAAACQAAAAAAAAAAAAAAAAAAAAAAAAAJBAUGv3ua
        sP+15P//tOL//7Ph//+z4f//tuX//3KRof8fCkj/Yx3o/yULVv87EYr/Zx/x/2cf8f87EYr/JAtU/1kW
        u/8bBzX/cpGi/7bl//+z4f//s+H//7Tj//+t2vf/bIea/wQFBb8AAAAJAAAAAAAAAAAAAAAAAAAAAAAA
        AAkEBQa/e5ux/6zZ9/9heov/SFll/0lcaP9KXGj/LTk+/x4JR/9hHeX/Thi4/1Yayf9kHur/ZB7q/1Ya
        yf9OF7X/WRa5/xoGNP8sOkH/SVxr/0lcaf9HWmj/YXqM/6TP6/9siJv/BAUFvwAAAAkAAAAAAAAAAAAA
        AAAAAAAAAAAACQQFBr99nbP/lLjS/w0iKP8AWGb/ABgc/wBbb/8ASV3/GAo9/18d4P9kHuz/ZB7r/2Me
        6v9jHur/ZB7r/2Qe6P9WFbP/GAgp/1BHAP9dUgD/ExEA/zgzAP8ZGxP/i6/H/26Knf8EBQW/AAAACQAA
        AAAAAAAAAAAAAAAAAAAAAAAJBAUGv32ds/+RtM3/CzI5/wC0zv8ASVT/Ab7f/wau3f8IHDH/SRSq/2Yf
        7/9iHuf/XBvY/1wc2P9iHuj/Yhzf/z8OhP8iGwv/u6YA/7ynAP89NwD/dmwA/yMkEP+Hq8T/boqd/wQF
        Bb8AAAAJAAAAAAAAAAAAAAAAAAAAAAAAAAkEBQa/fZ2z/5O30P8MLzb/AMTi/wDL6/8A3fz/A9b//wNu
        jP8TCzP/PBGM/yYKWv8aDzb/GQ41/yUKWP83DXb/Fwkg/3ZqAP/YvwD/1b0A/7qmAP+GegD/ISIS/4mt
        x/9uip3/BAUFvwAAAAkAAAAAAAAAAAAAAAAAAAAAAAAACQQFBr98nLH/pM3q/x4wN/8AmbH/AM3t/wCb
        s/8Ak6v/A67V/wJNZf8NDhH/Umh0/4Wpvv+Dpbr/Sl5o/wkLD/9VSwD/sZ0A/459AP+WhQD/sp8A/2Zc
        AP8lLSz/m8Pf/22Jm/8EBQW/AAAACQAAAAAAAAAAAAAAAAAAAAAAAAAJBAUGv3ubsP+25P//aIKT/wcp
        L/8EMjr/JTQ7/yo3P/8KKTL/BB8p/2R9jv+z4f3/teT//7Xk//+q1fL/V25+/yEeA/8pKA//Lzo//ygw
        MP8lIgX/HBwK/2iDlf+t2vj/bIea/wQFBb8AAAAJAAAAAAAAAAAAAAAAAAAAAAAAAAkEBQa/e5qw/7bl
        //+o0+//KTM6/09ib/+n0u//pc/s/1dtfP8fJyz/osvm/7Pi//+y4P//suD//7He/f+Rts//GyIn/2N9
        kP+t2fj/ncXh/0RWY/8oMzr/qNPv/67a+P9sh5r/BAUFvwAAAAkAAAAAAAAAAAAAAAAAAAAAAAAACQQF
        Br97mrD/tuX//5vD3v8mMDb/lbzT/7Xk//+u2vj/b4yf/y04QP+q1vP/suH//7Lg//+y4P//sd/9/5nB
        2/8oMjn/f6C1/7Xk//+w3vz/hKa8/yMtM/+bxN//rtv5/2yHmv8EBQW/AAAACQAAAAAAAAAAAAAAAAAA
        AAAAAAAJBAUGv3uasP+25f//n8jk/ycxOP+Lr8b/tub//7He/P9/n7X/HiUq/5W81P+14///suD//7Lg
        //+x3vz/hKe+/x0kKf+PtMv/tuX//7He+/97mrD/JS81/5/J5P+u2/n/bIea/wQFBb8AAAAJAAAAAAAA
        AAAAAAAAAAAABwAAACMEBQbDe5uw/7Xk//+x3/3/UWZ0/zRBSv+Lr8f/j7PM/0ZYZP8KDQ//QVFd/6PN
        6f+14///tOL//5i/2f85R1H/Cw4P/09kcv+Vu9X/gqO6/y04QP9RZnT/sd/+/63Z+P9sh5r/BAUFwwAA
        ACMAAAAHAAAAAAAAAAkAAAKCAQIG3QMEBfF9nbH/tuX//7Ph//+l0Ov/UWZ0/yYwN/8jLTP/O0tV/32d
        s/86SVP/KTQ7/1Jndf9PZHL/JS81/zlIUv99nbP/PEtW/yQuNP8lLjX/UWZ0/6XQ6/+z4v//rtr4/26K
        nf8DBATxAQAF3QAAAYIAAAAJAAAAggsOMfUhKZf/Cw0y/0NUXv+lz+r/tOL//7Ph//+x3/z/n8jk/5vD
        3v+t2fb/teT//6fT7/90kqb/TmJv/05ib/90kqb/p9Pv/7Xk//+t2fb/m8Pe/5/I5P+x3/z/s+H//7Pi
        //+awt3/OklS/woNMv8XGoX/BgYp9QAAAIIBAQPwHiaM/zdF+/8tOdH/EBRJ/zVDS/+Yv9j/tOP//7Lg
        //+z4f//tOL//7Lg//+y4P//s+H//7Xj//+04v//tOL//7Xj//+z4f//suD//7Lg//+04v//s+H//7Lg
        //+y4f//jrPL/y87Q/8QFEr/LjrS/y847P8SEnT/AAAD7wAAAIMHCSLuIyyi/zVE9v8xPuL/FBpk/yQt
        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
        AAP/AAAD/4AAA//AAgf/4AcH//AP///8P/8=
</value>
  </data>
</root>